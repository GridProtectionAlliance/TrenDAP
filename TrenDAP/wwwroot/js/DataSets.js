"use strict";
(self["webpackChunktrendap"] = self["webpackChunktrendap"] || []).push([["DataSets"],{

/***/ "./wwwroot/TypeScript/Features/DataSets/DataSets.tsx":
/*!***********************************************************!*\
  !*** ./wwwroot/TypeScript/Features/DataSets/DataSets.tsx ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-redux */ "./node_modules/react-redux/es/index.js");
/* harmony import */ var _gpa_gemstone_react_table_lib_index__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @gpa-gemstone/react-table/lib/index */ "./node_modules/@gpa-gemstone/react-table/lib/index.js");
/* harmony import */ var _DataSetsSlice__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./DataSetsSlice */ "./wwwroot/TypeScript/Features/DataSets/DataSetsSlice.ts");
/* harmony import */ var react_router_dom__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! react-router-dom */ "./node_modules/react-router-dom/index.js");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! moment */ "./node_modules/moment/moment.js");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _DataSetData__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./DataSetData */ "./wwwroot/TypeScript/Features/DataSets/DataSetData.tsx");
/* harmony import */ var _gpa_gemstone_gpa_symbols__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @gpa-gemstone/gpa-symbols */ "./node_modules/@gpa-gemstone/gpa-symbols/lib/index.js");
/* harmony import */ var _gpa_gemstone_react_interactive__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @gpa-gemstone/react-interactive */ "./node_modules/@gpa-gemstone/react-interactive/lib/index.js");
//******************************************************************************************************
//  DataSets.tsx - Gbtc
//
//  Copyright Â© 2020, Grid Protection Alliance.  All Rights Reserved.
//
//  Licensed to the Grid Protection Alliance (GPA) under one or more contributor license agreements. See
//  the NOTICE file distributed with this work for additional information regarding copyright ownership.
//  The GPA licenses this file to you under the MIT License (MIT), the "License"; you may not use this
//  file except in compliance with the License. You may obtain a copy of the License at:
//
//      http://opensource.org/licenses/MIT
//
//  Unless agreed to in writing, the subject software distributed under the License is distributed on an
//  "AS-IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. Refer to the
//  License for the specific language governing permissions and limitations.
//
//  Code Modification History:
//  ----------------------------------------------------------------------------------------------------
//  09/25/2020 - Billy Ernest
//       Generated original version of source code.
//
//******************************************************************************************************
var __assign = (undefined && undefined.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __read = (undefined && undefined.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};









var DataSets = function (props) {
    var dispatch = (0,react_redux__WEBPACK_IMPORTED_MODULE_1__.useDispatch)();
    var DataSets = (0,react_redux__WEBPACK_IMPORTED_MODULE_1__.useSelector)(function (state) { return (0,_DataSetsSlice__WEBPACK_IMPORTED_MODULE_3__.SelectDataSetsForUser)(state, userName); });
    var publicDataSets = (0,react_redux__WEBPACK_IMPORTED_MODULE_1__.useSelector)(function (state) { return (0,_DataSetsSlice__WEBPACK_IMPORTED_MODULE_3__.SelectDataSetsAllPublicNotUser)(state, userName); });
    var _a = __read(react__WEBPACK_IMPORTED_MODULE_0__.useState(null), 2), deleteItem = _a[0], setDeleteItem = _a[1];
    var dsStatus = (0,react_redux__WEBPACK_IMPORTED_MODULE_1__.useSelector)(_DataSetsSlice__WEBPACK_IMPORTED_MODULE_3__.SelectDataSetsStatus);
    var sortField = (0,react_redux__WEBPACK_IMPORTED_MODULE_1__.useSelector)(_DataSetsSlice__WEBPACK_IMPORTED_MODULE_3__.SelectDataSetsSortField);
    var ascending = (0,react_redux__WEBPACK_IMPORTED_MODULE_1__.useSelector)(_DataSetsSlice__WEBPACK_IMPORTED_MODULE_3__.SelectDataSetsAscending);
    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(function () {
        if (dsStatus != 'unitiated' && dsStatus != 'changed')
            return;
        dispatch((0,_DataSetsSlice__WEBPACK_IMPORTED_MODULE_3__.FetchDataSets)());
        return function () {
        };
    }, [dispatch, dsStatus]);
    return (react__WEBPACK_IMPORTED_MODULE_0__.createElement("div", { className: "row", style: { margin: 10 } },
        react__WEBPACK_IMPORTED_MODULE_0__.createElement("div", { className: "col-8", style: { padding: '0 0 0 0' } },
            react__WEBPACK_IMPORTED_MODULE_0__.createElement("div", { className: "card" },
                react__WEBPACK_IMPORTED_MODULE_0__.createElement("div", { className: "card-header" },
                    react__WEBPACK_IMPORTED_MODULE_0__.createElement("div", { className: "row" },
                        react__WEBPACK_IMPORTED_MODULE_0__.createElement("div", { className: "col" },
                            react__WEBPACK_IMPORTED_MODULE_0__.createElement("h4", null, "My DataSets:")),
                        react__WEBPACK_IMPORTED_MODULE_0__.createElement("div", { className: "col" },
                            react__WEBPACK_IMPORTED_MODULE_0__.createElement(react_router_dom__WEBPACK_IMPORTED_MODULE_8__.Link, { to: "".concat(homePath, "AddNewDataSet") },
                                react__WEBPACK_IMPORTED_MODULE_0__.createElement("button", { className: "btn btn-primary pull-right", onClick: function () { return dispatch((0,_DataSetsSlice__WEBPACK_IMPORTED_MODULE_3__.New)({})); } }, "Add New"))))),
                react__WEBPACK_IMPORTED_MODULE_0__.createElement("div", { className: "card-body" },
                    react__WEBPACK_IMPORTED_MODULE_0__.createElement(_gpa_gemstone_react_table_lib_index__WEBPACK_IMPORTED_MODULE_2__["default"], { cols: [
                            { key: 'Name', field: 'Name', label: 'Name' },
                            { key: 'Public', field: 'Public', label: 'Shared', headerStyle: { width: 75 }, rowStyle: { width: 75 }, content: function (item, key, style) { return react__WEBPACK_IMPORTED_MODULE_0__.createElement("span", null, item[key] ? _gpa_gemstone_gpa_symbols__WEBPACK_IMPORTED_MODULE_6__.HeavyCheckMark : null); } },
                            { key: 'UpdatedOn', field: 'UpdatedOn', label: 'Updated', content: function (item, key, style) { return react__WEBPACK_IMPORTED_MODULE_0__.createElement("span", null, moment__WEBPACK_IMPORTED_MODULE_4___default()(item.UpdatedOn).subtract(new Date().getTimezoneOffset(), 'minutes').format('MM/DD/YY HH:mm')); } },
                            {
                                key: null,
                                label: '',
                                headerStyle: { width: 300 },
                                rowStyle: { width: 300 },
                                content: function (item, key, style) {
                                    var _a;
                                    return react__WEBPACK_IMPORTED_MODULE_0__.createElement("span", null,
                                        react__WEBPACK_IMPORTED_MODULE_0__.createElement(_DataSetData__WEBPACK_IMPORTED_MODULE_5__["default"], __assign({}, item)),
                                        ((_a = item.Data) === null || _a === void 0 ? void 0 : _a.Status) === 'idle' ? react__WEBPACK_IMPORTED_MODULE_0__.createElement(react_router_dom__WEBPACK_IMPORTED_MODULE_8__.Link, { to: "".concat(homePath, "ViewDataSet/").concat(item.ID), title: 'View/Edit DataSet Data.', className: 'btn' }, _gpa_gemstone_gpa_symbols__WEBPACK_IMPORTED_MODULE_6__.Wrench) : null,
                                        react__WEBPACK_IMPORTED_MODULE_0__.createElement(react_router_dom__WEBPACK_IMPORTED_MODULE_8__.Link, { to: "".concat(homePath, "EditDataSet/").concat(item.ID), title: 'Edit DataSet Parameters.', className: 'btn' }, _gpa_gemstone_gpa_symbols__WEBPACK_IMPORTED_MODULE_6__.Pencil),
                                        react__WEBPACK_IMPORTED_MODULE_0__.createElement("a", { title: 'Clone DataSet.', className: "btn", onClick: function () { return dispatch((0,_DataSetsSlice__WEBPACK_IMPORTED_MODULE_3__.CloneDataSet)(item)); } }, _gpa_gemstone_gpa_symbols__WEBPACK_IMPORTED_MODULE_6__.DNA),
                                        react__WEBPACK_IMPORTED_MODULE_0__.createElement("a", { title: 'Delete DataSet.', className: "btn", onClick: function () { return setDeleteItem(item); } }, _gpa_gemstone_gpa_symbols__WEBPACK_IMPORTED_MODULE_6__.TrashCan));
                                }
                            }
                        ], tableClass: "table table-hover", theadStyle: { fontSize: 'smaller', display: 'table', tableLayout: 'fixed', width: '100%', height: 50 }, tbodyStyle: { display: 'block', overflowY: 'scroll', maxHeight: window.innerHeight - 215, height: window.innerHeight - 215, width: '100%' }, rowStyle: { fontSize: 'smaller', display: 'table', tableLayout: 'fixed', width: '100%' }, sortKey: sortField, onClick: function (data) { }, onSort: function (data) { return dispatch((0,_DataSetsSlice__WEBPACK_IMPORTED_MODULE_3__.Sort)({ SortField: data.colField, Ascending: data.ascending })); }, data: DataSets, ascending: ascending })))),
        react__WEBPACK_IMPORTED_MODULE_0__.createElement("div", { className: "col-4", style: { padding: '0 0 0 0' } },
            react__WEBPACK_IMPORTED_MODULE_0__.createElement("div", { className: "card" },
                react__WEBPACK_IMPORTED_MODULE_0__.createElement("div", { className: "card-header" }, "Shared DataSets"),
                react__WEBPACK_IMPORTED_MODULE_0__.createElement("div", { className: "card-body" },
                    react__WEBPACK_IMPORTED_MODULE_0__.createElement(_gpa_gemstone_react_table_lib_index__WEBPACK_IMPORTED_MODULE_2__["default"], { cols: [
                            { key: 'Name', field: 'Name', label: 'Name' },
                            { key: 'UpdatedOn', field: 'UpdatedOn', label: 'Updated', content: function (item, key, style) { return react__WEBPACK_IMPORTED_MODULE_0__.createElement("span", null, moment__WEBPACK_IMPORTED_MODULE_4___default()(item.UpdatedOn).subtract(new Date().getTimezoneOffset(), 'minutes').format('MM/DD/YY HH:mm')); } },
                            //{ key: null, label: '', content: (item, key, style) => <span><EditDataSet DataSet={item} /><button className="btn" onClick={() => dispatch(RemoveDataSet(item))}>{TrashCan}</button></span> }
                        ], tableClass: "table table-hover", theadStyle: { fontSize: 'smaller', display: 'table', tableLayout: 'fixed', width: '100%', height: 50 }, tbodyStyle: { display: 'block', overflowY: 'scroll', maxHeight: window.innerHeight - 215, height: window.innerHeight - 215, width: '100%' }, rowStyle: { fontSize: 'smaller', display: 'table', tableLayout: 'fixed', width: '100%' }, sortKey: sortField, onClick: function () { }, onSort: function (data) { return dispatch((0,_DataSetsSlice__WEBPACK_IMPORTED_MODULE_3__.Sort)({ SortField: data.colField, Ascending: data.ascending })); }, data: publicDataSets, ascending: ascending })))),
        react__WEBPACK_IMPORTED_MODULE_0__.createElement(_gpa_gemstone_react_interactive__WEBPACK_IMPORTED_MODULE_7__.Warning, { Title: 'Delete ' + (deleteItem === null || deleteItem === void 0 ? void 0 : deleteItem.Name), Show: deleteItem != null, Message: "This will remove the Dataset and can not be undone.", CallBack: function (c) { if (c)
                dispatch((0,_DataSetsSlice__WEBPACK_IMPORTED_MODULE_3__.RemoveDataSet)(deleteItem)); setDeleteItem(null); } })));
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (DataSets);


/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,